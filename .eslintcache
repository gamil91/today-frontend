[{"/Users/alexagamil/Development/today-phase5/today-frontend/src/App.js":"1","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/UserForm.js":"2","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/DeleteModal.js":"3","/Users/alexagamil/Development/today-phase5/today-frontend/src/index.js":"4","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Home.js":"5","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TopNav.js":"6","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/reducers.js":"7","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogForm.js":"8","/Users/alexagamil/Development/today-phase5/today-frontend/src/reportWebVitals.js":"9","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NotFound.js":"10","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/userActions.js":"11","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/blogsActions.js":"12","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogContainer.js":"13","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogCard.js":"14","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/EditBlogModal.js":"15","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Comment.js":"16","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentContainer.js":"17","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentForm.js":"18","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/commentsActions.js":"19","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserCarousel.js":"20","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserModal.js":"21","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListContainer.js":"22","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/listsActions.js":"23","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListCard.js":"24","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TaskCard.js":"25","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/tasksActions.js":"26"},{"size":1933,"mtime":1611344437405,"results":"27","hashOfConfig":"28"},{"size":7487,"mtime":1611457780600,"results":"29","hashOfConfig":"28"},{"size":911,"mtime":1611384261139,"results":"30","hashOfConfig":"28"},{"size":703,"mtime":1611216594718,"results":"31","hashOfConfig":"28"},{"size":8333,"mtime":1611457952069,"results":"32","hashOfConfig":"28"},{"size":1221,"mtime":1611384261141,"results":"33","hashOfConfig":"28"},{"size":5367,"mtime":1611538838126,"results":"34","hashOfConfig":"28"},{"size":7276,"mtime":1611450117645,"results":"35","hashOfConfig":"28"},{"size":362,"mtime":1610587773990,"results":"36","hashOfConfig":"28"},{"size":165,"mtime":1610751051366,"results":"37","hashOfConfig":"28"},{"size":1552,"mtime":1611271485822,"results":"38","hashOfConfig":"28"},{"size":2191,"mtime":1611216594719,"results":"39","hashOfConfig":"28"},{"size":669,"mtime":1610941312277,"results":"40","hashOfConfig":"28"},{"size":3277,"mtime":1611271485797,"results":"41","hashOfConfig":"28"},{"size":742,"mtime":1610775112359,"results":"42","hashOfConfig":"28"},{"size":471,"mtime":1611216594713,"results":"43","hashOfConfig":"28"},{"size":663,"mtime":1611450117647,"results":"44","hashOfConfig":"28"},{"size":1887,"mtime":1611271485801,"results":"45","hashOfConfig":"28"},{"size":1787,"mtime":1611005688386,"results":"46","hashOfConfig":"28"},{"size":2467,"mtime":1611384261141,"results":"47","hashOfConfig":"28"},{"size":647,"mtime":1611216594715,"results":"48","hashOfConfig":"28"},{"size":4239,"mtime":1611539107007,"results":"49","hashOfConfig":"28"},{"size":2129,"mtime":1611539318510,"results":"50","hashOfConfig":"28"},{"size":4791,"mtime":1611533980801,"results":"51","hashOfConfig":"28"},{"size":3123,"mtime":1611465102067,"results":"52","hashOfConfig":"28"},{"size":1535,"mtime":1611532381522,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"hmv8g6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/alexagamil/Development/today-phase5/today-frontend/src/App.js",[],["116","117"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/UserForm.js",[],["118","119"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/DeleteModal.js",[],["120","121"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/index.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Home.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TopNav.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/reducers.js",["122"],"import { combineReducers } from 'redux';\n\nconst initialState = {\n    user: {name: \"\", id: \"\"},\n    allBlogs: [],\n    likedBlogs: [],\n    newUser: false,\n    lists: []\n}\n\n\n\nconst userReducer = (state = initialState.user, action) => {\n    switch(action.type){\n        case \"SET_USER\":\n            return {name: action.payload.name, id: action.payload.id}\n        case \"LOG_OUT\":\n            return {name: \"\", id: \"\"}\n        default:\n            return state\n    }\n}\n \nconst listsReducer = (state = initialState.lists, action) => {\n    switch (action.type){\n        case \"SET_USER\":\n            return action.payload.lists\n        case \"ADD_LIST\":\n            return [...state, action.payload]\n        case \"UPDATE_LIST\":\n            return state.map(list => list.id === action.payload.id ? action.payload : list)\n        case \"DELETE_LIST\":\n            return state.filter(list => list.id !== action.payload.id)\n        case \"ADD_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:[...list.tasks, action.payload]})\n        case \"UPDATE_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:list.tasks.map(task => task.id !== action.payload.id ? task : action.payload)})\n        case \"DELETE_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:list.tasks.filter(task => task.id !== action.payload.id)})\n        case \"DRAG_HAPPENED\":\n            // debugger\n            const { droppableIdStart, \n                droppableIdEnd, \n                droppableIndexStart, \n                droppableIndexEnd, \n                draggableId,\n                type} = action.payload;\n\n            const newState = [...state]\n\n            if(type === \"list\"){\n                // debugger\n                const list = newState.splice(parseInt(droppableIndexStart),1)\n                newState.splice(parseInt(droppableIndexEnd), 0, ...list)\n                return newState \n            }\n            \n            if (droppableIdStart === droppableIdEnd){\n                const list = state.find(list => parseInt(droppableIdStart) === list.id)\n                const taskCard = list.tasks.splice(parseInt(droppableIndexStart), 1)\n                list.tasks.splice(parseInt(droppableIndexEnd), 0, ...taskCard)\n            }\n\n            if(droppableIdStart !== droppableIdEnd){\n                const listStart = state.find(list => parseInt(droppableIdStart) === list.id)\n                const taskCard = listStart.tasks.splice(parseInt(droppableIndexStart), 1)\n                const listEnd = state.find(list => parseInt(droppableIdEnd) === list.id)\n                listEnd.tasks.splice(droppableIndexEnd, 0, ...taskCard)\n            }\n\n            return newState\n        default:\n            return state\n    }\n}\n\n\n\nconst likesReducer = (state = initialState.likedBlogs, action) => {\n    switch(action.type){\n        case \"SET_LIKED_BLOGS\":\n            let blogsLiked = action.payload.map(data => Object.assign(data.blog))\n            return blogsLiked\n        case \"UNLIKE_BLOG\":\n            let filteredLikes = state.filter(likedBlog => likedBlog.id !== action.payload.blog.id) \n            return filteredLikes\n        case \"ADD_LIKE\":\n            return [...state, action.payload.blog]\n        case \"LOG_OUT\":\n            return []\n        default:\n            return state\n    }\n}\n\nconst blogsReducer = (state = initialState.allBlogs, action) => {\n    switch(action.type){\n        case \"LOG_OUT\":\n            return []\n        case \"SET_BLOGS\":\n            return action.payload\n        case \"ADD_BLOG\":\n            return [action.payload, ...state]\n        case \"UPDATE_BLOG\":\n            return state.map(blog => blog.id !== action.payload.id ? blog : action.payload)\n        case \"DELETE_BLOG\":\n            let updated = state.filter(b => b.id !== action.payload)\n            return updated   \n        case \"ADD_LIKE\":\n            return state.map(blog => blog.id !== action.payload.blog.id ? blog : {...blog, user_likes:[...blog.user_likes, action.payload.user]})\n        case \"UNLIKE_BLOG\":\n            return state.map(blog => blog.id !== action.payload.blog.id ? blog : {...blog, user_likes: blog.user_likes.filter(ul => ul.id !== action.payload.user.id)})\n        case \"ADD_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments:[...blog.comments, action.payload]})\n        case \"UPDATE_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments:blog.comments.map(comment => comment.id !== action.payload.id ? comment : action.payload)})\n        case \"DELETE_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments: blog.comments.filter(comment => comment.id !== action.payload.id)})\n        default:\n            return state\n    }\n}\n\nconst newUserReducer = (state = initialState.newUser, action) => {\n    switch(action.type){\n        case \"SET_NEW_USER\":\n            return true\n        case \"SET_OLD_USER\":\n            return false\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    user: userReducer,\n    likedBlogs: likesReducer,\n    allBlogs: blogsReducer,\n    newUser: newUserReducer,\n    lists: listsReducer\n})\n\n\n","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogForm.js",[],["123","124"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/reportWebVitals.js",[],["125","126"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NotFound.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/userActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/blogsActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogContainer.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogCard.js",[],["127","128"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/EditBlogModal.js",["129"],"import React from 'react';\nimport { Form, Button, Modal } from 'react-bootstrap'\n\nconst EditBlogModal = (openModal, closeModal, handleEdit) => {\n    return (\n        <>\n       <Modal show={openModal} onHide={closeModal} backdrop=\"static\">\n            <Modal.Header closeButton>\n                <Modal.Title>Delete Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to permanently delete your account?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeModal}> Close </Button>\n                <Button variant=\"primary\" onClick={handleEdit}> Delete</Button>\n            </Modal.Footer>\n        </Modal>\n    </>\n    );\n} \n\nexport default EditBlogModal;\n","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Comment.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentContainer.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentForm.js",[],["130","131"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/commentsActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserCarousel.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserModal.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListContainer.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/listsActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListCard.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TaskCard.js",[],["132","133"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/tasksActions.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":46,"column":17,"nodeType":"144","messageId":"145","endLine":46,"endColumn":28},{"ruleId":"134","replacedBy":"146"},{"ruleId":"136","replacedBy":"147"},{"ruleId":"134","replacedBy":"148"},{"ruleId":"136","replacedBy":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"136","replacedBy":"151"},{"ruleId":"142","severity":1,"message":"152","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"134","replacedBy":"153"},{"ruleId":"136","replacedBy":"154"},{"ruleId":"134","replacedBy":"155"},{"ruleId":"136","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],["157"],["158"],"no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar",["157"],["158"],["157"],["158"],["157"],["158"],"'Form' is defined but never used.",["157"],["158"],["157"],["158"],"no-global-assign","no-unsafe-negation"]