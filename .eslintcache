[{"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogContainer.js":"1","/Users/alexagamil/Development/today-phase5/today-frontend/src/index.js":"2","/Users/alexagamil/Development/today-phase5/today-frontend/src/App.js":"3","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Home.js":"4","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserModal.js":"5","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/blogsActions.js":"6","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/listsActions.js":"7","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogCard.js":"8","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TaskCard.js":"9","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Comment.js":"10","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/SoundCloud.js":"11","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/UserForm.js":"12","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/userActions.js":"13","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListCard.js":"14","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentContainer.js":"15","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/commentsActions.js":"16","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/tasksActions.js":"17","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TopNav.js":"18","/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/reducers.js":"19","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListContainer.js":"20","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogForm.js":"21","/Users/alexagamil/Development/today-phase5/today-frontend/src/reportWebVitals.js":"22","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/DeleteModal.js":"23","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserCarousel.js":"24","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NotFound.js":"25","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentForm.js":"26"},{"size":1502,"mtime":1614136042854,"results":"27","hashOfConfig":"28"},{"size":703,"mtime":1611216594718,"results":"29","hashOfConfig":"28"},{"size":2369,"mtime":1611961945824,"results":"30","hashOfConfig":"28"},{"size":8818,"mtime":1614388814227,"results":"31","hashOfConfig":"28"},{"size":647,"mtime":1611216594715,"results":"32","hashOfConfig":"28"},{"size":2265,"mtime":1614216997352,"results":"33","hashOfConfig":"28"},{"size":2712,"mtime":1614216997355,"results":"34","hashOfConfig":"28"},{"size":4255,"mtime":1614551858739,"results":"35","hashOfConfig":"28"},{"size":3186,"mtime":1614388814229,"results":"36","hashOfConfig":"28"},{"size":800,"mtime":1614136042862,"results":"37","hashOfConfig":"28"},{"size":1170,"mtime":1614136042881,"results":"38","hashOfConfig":"28"},{"size":7526,"mtime":1614388814230,"results":"39","hashOfConfig":"28"},{"size":1582,"mtime":1614216997356,"results":"40","hashOfConfig":"28"},{"size":4815,"mtime":1614368981732,"results":"41","hashOfConfig":"28"},{"size":916,"mtime":1612386936833,"results":"42","hashOfConfig":"28"},{"size":1787,"mtime":1611005688386,"results":"43","hashOfConfig":"28"},{"size":1565,"mtime":1614216997356,"results":"44","hashOfConfig":"28"},{"size":2326,"mtime":1614550218708,"results":"45","hashOfConfig":"28"},{"size":5664,"mtime":1611961945853,"results":"46","hashOfConfig":"28"},{"size":4520,"mtime":1614388814229,"results":"47","hashOfConfig":"28"},{"size":7266,"mtime":1614388814227,"results":"48","hashOfConfig":"28"},{"size":362,"mtime":1610587773990,"results":"49","hashOfConfig":"28"},{"size":1177,"mtime":1614061699503,"results":"50","hashOfConfig":"28"},{"size":2390,"mtime":1614136042880,"results":"51","hashOfConfig":"28"},{"size":165,"mtime":1610751051366,"results":"52","hashOfConfig":"28"},{"size":2649,"mtime":1614136042869,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hmv8g6",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogContainer.js",["110"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/index.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/App.js",[],["111","112"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Home.js",[],["113","114"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserModal.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/blogsActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/listsActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogCard.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TaskCard.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/Comment.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/SoundCloud.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/UserForm.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/userActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListCard.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentContainer.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/commentsActions.js",[],["115","116"],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/actions/tasksActions.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/TopNav.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/redux/reducers.js",["117"],"import { combineReducers } from 'redux';\n\nconst initialState = {\n    user: {name: \"\", id: \"\"},\n    allBlogs: [],\n    likedBlogs: [],\n    newUser: false,\n    lists: [],\n    player: false\n}\n\nconst playReducer = (state = initialState.player, action) => {\n    switch(action.type){\n        case \"SET_PLAYER\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\n\n\nconst userReducer = (state = initialState.user, action) => {\n    switch(action.type){\n        case \"SET_USER\":\n            return {name: action.payload.name, id: action.payload.id}\n        case \"LOG_OUT\":\n            return {name: \"\", id: \"\"}\n        default:\n            return state\n    }\n}\n \nconst listsReducer = (state = initialState.lists, action) => {\n    switch (action.type){\n        case \"SET_LIST\":\n            // debugger\n            return action.payload\n        case \"ADD_LIST\":\n            return [...state, action.payload]\n        case \"UPDATE_LIST\":\n            return state.map(list => list.id === action.payload.id ? action.payload : list)\n        case \"DELETE_LIST\":\n            return state.filter(list => list.id !== action.payload.id)\n        case \"ADD_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:[...list.tasks, action.payload]})\n        case \"UPDATE_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:list.tasks.map(task => task.id !== action.payload.id ? task : action.payload)})\n        case \"DELETE_TASK\":\n            return state.map(list => list.id !== action.payload.list_id ? list : {...list, tasks:list.tasks.filter(task => task.id !== action.payload.id)})\n        case \"DRAG_HAPPENED\":\n            // debugger\n            const { droppableIdStart, \n                droppableIdEnd, \n                droppableIndexStart, \n                droppableIndexEnd, \n                draggableId,\n                type} = action.payload;\n\n            const newState = [...state]\n\n            if(type === \"list\"){\n                // debugger\n                const list = newState.splice(parseInt(droppableIndexStart),1)\n                newState.splice(parseInt(droppableIndexEnd), 0, ...list)\n                return newState \n            }\n            \n            if (droppableIdStart === droppableIdEnd){\n                const list = state.find(list => parseInt(droppableIdStart) === list.id)\n                const taskCard = list.tasks.splice(parseInt(droppableIndexStart), 1)\n                list.tasks.splice(parseInt(droppableIndexEnd), 0, ...taskCard)\n            }\n\n            if(droppableIdStart !== droppableIdEnd){\n                const listStart = state.find(list => parseInt(droppableIdStart) === list.id)\n                const taskCard = listStart.tasks.splice(parseInt(droppableIndexStart), 1)\n                const listEnd = state.find(list => parseInt(droppableIdEnd) === list.id)\n                listEnd.tasks.splice(droppableIndexEnd, 0, ...taskCard)\n            }\n\n            return newState\n        default:\n            return state\n    }\n}\n\n\n\nconst likesReducer = (state = initialState.likedBlogs, action) => {\n    switch(action.type){\n        case \"SET_LIKED_BLOGS\":\n            let blogsLiked = action.payload.map(data => Object.assign(data.blog))\n            return blogsLiked\n        case \"UNLIKE_BLOG\":\n            let filteredLikes = state.filter(likedBlog => likedBlog.id !== action.payload.blog.id) \n            return filteredLikes\n        case \"ADD_LIKE\":\n            return [...state, action.payload.blog]\n        case \"LOG_OUT\":\n            return []\n        default:\n            return state\n    }\n}\n\nconst blogsReducer = (state = initialState.allBlogs, action) => {\n    switch(action.type){\n        case \"LOG_OUT\":\n            return []\n        case \"SET_BLOGS\":\n            // debugger\n            return action.payload.reverse()\n        case \"ADD_BLOG\":\n            return [action.payload, ...state]\n        case \"UPDATE_BLOG\":\n            return state.map(blog => blog.id !== action.payload.id ? blog : action.payload)\n        case \"DELETE_BLOG\":\n            let updated = state.filter(b => b.id !== action.payload)\n            return updated   \n        case \"ADD_LIKE\":\n            return state.map(blog => blog.id !== action.payload.blog.id ? blog : {...blog, user_likes:[...blog.user_likes, action.payload.user]})\n        case \"UNLIKE_BLOG\":\n            return state.map(blog => blog.id !== action.payload.blog.id ? blog : {...blog, user_likes: blog.user_likes.filter(ul => ul.id !== action.payload.user.id)})\n        case \"ADD_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments:[...blog.comments, action.payload]})\n        case \"UPDATE_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments:blog.comments.map(comment => comment.id !== action.payload.id ? comment : action.payload)})\n        case \"DELETE_COMMENT\":\n            return state.map(blog => blog.id !== action.payload.blog_id ? blog : {...blog, comments: blog.comments.filter(comment => comment.id !== action.payload.id)})\n        default:\n            return state\n    }\n}\n\nconst newUserReducer = (state = initialState.newUser, action) => {\n    switch(action.type){\n        case \"SET_NEW_USER\":\n            return true\n        case \"SET_OLD_USER\":\n            return false\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    user: userReducer,\n    likedBlogs: likesReducer,\n    allBlogs: blogsReducer,\n    newUser: newUserReducer,\n    lists: listsReducer, \n    player: playReducer\n})\n\n\n","/Users/alexagamil/Development/today-phase5/today-frontend/src/components/ListContainer.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/BlogForm.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/reportWebVitals.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/DeleteModal.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NewUserCarousel.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/NotFound.js",[],"/Users/alexagamil/Development/today-phase5/today-frontend/src/components/CommentForm.js",[],{"ruleId":"118","severity":1,"message":"119","line":26,"column":32,"nodeType":"120","messageId":"121","endLine":26,"endColumn":34},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":57,"column":17,"nodeType":"132","messageId":"133","endLine":57,"endColumn":28},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],["134"],["135"],"no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]